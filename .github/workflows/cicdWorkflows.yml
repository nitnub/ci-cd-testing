name: npm Test
on: [push]
jobs:
  test:
    name: Run test suites
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node_version: [18.x]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version}}
        uses: actions/setup-node@v1
        with:
          node-version: ${{matrix.node-version}}
      - run: npm install
      - run: npm run build --if-present
      - name: Spin up test server
        run: npm start &
      - run: npm test
  build:
  
    name: Build Docker image
    needs: test
    runs-on: ubuntu-latest
  

    steps:
      - uses: actions/checkout@v1 # may be actions/checkout@v2 now
      - name: Login to DockerHub Registry
        run: echo ${{ secrets.DOCKERHUB_TOKEN }} |  docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
      - name: Get the version
        id: vars
        run: echo ::set-output name=tag::$(echo ${GITHUB_REF:10})
      - name: Build the tagged Docker image
        run: docker build -t nitnub/ci-cd-testing .
      - name: Push the tagged Docker image
        run: docker push nitnub/ci-cd-testing

  deploy:
    runs-on: ubuntu-latest
    name: Deploy to AWS
    needs: build
    steps:
      # Step 1
      - name: Checkout to repo
        uses: actions/checkout@v2

        # Step 2
      - name: Set AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

        # Step 3
      - name: Create CodeDeploy Deployment
        id: deploy
        run: |
          aws deploy create-deployment \
          --application-name CICD-node-test-app \
          --deployment-group-name CICD-node-test-app-cd1 \
          --deployment-config-name CodeDeployDefault.OneAtATime \
          --github-location repository=${{ github.repository }},commitId=${{ github.sha }}
